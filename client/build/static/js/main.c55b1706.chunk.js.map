{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/partials/Navbar.js","components/partials/Sidebar.js","components/pages/Dashboard.js","components/pages/BotSetting.js","components/auth/Login.js","components/layout/NotFound.js","components/private-route/PrivateRoute.js","components/auth/Register.js","reducers/authReducers.js","reducers/carouselReducer.js","reducers/errorReducers.js","reducers/index.js","store.js","actions/userActions.js","components/partials/AdminAddModal.js","components/partials/AdminUpdateModal.js","components/pages/Admin.js","components/partials/UserAddModal.js","components/partials/UserUpdateModal.js","components/pages/Users.js","actions/carouselActions.js","components/partials/CarouselAddModal.js","components/partials/CarouselUpdateModal.js","components/pages/Carousel.js","components/partials/StaffAddModal.js","components/partials/StaffUpdateModal.js","components/pages/Staff.js","components/partials/AboutAddModal.js","components/partials/AboutUpdateModal.js","components/pages/About.js","components/partials/RoadmapAddModal.js","components/partials/RoadmapUpdateModal.js","components/pages/Roadmap.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Navbar","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","onLogoutClick","e","preventDefault","props","_createClass","key","value","user","auth","React","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","onClick","name","FontAwesomeIcon","icon","faSignOutAlt","Component","connect","state","Sidebar","Link","to","Dashboard","onChange","setState","_defineProperty","target","post","then","res","toastr","success","catch","err","buy","url","shop","_this2","get","console","log","data","faList","event","BotSetting","checked","getBotSettingData","_res$data","discord","telegram","Toggle","Login","onSubmit","userData","email","password","loginUser","errors","isAuthenticated","history","push","nextProps","noValidate","htmlFor","error","classnames","invalid","setItem","jwt_decode","response","Landing","style","height","_ref","component","rest","_objectWithoutProperties","_excluded","Route","Object","assign","render","Redirect","Register","newUser","password2","registerUser","paddingLeft","width","borderRadius","letterSpacing","marginTop","withRouter","isEmpty","require","initialState","loading","combineReducers","undefined","action","_objectSpread","carousel","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","addUser","updateUser","UserAddModal","_React$Component","onUserAdd","message","$","modal","toast","position","POSITION","TOP_CENTER","data-reset","data-dismiss","autoComplete","form","UserUpdateModal","onUserUpdate","_id","record","data-reset-input","Admin","columns","text","align","sortable","cell","Fragment","editRecord","marginRight","deleteRecord","config","page_size","length_menu","filename","no_data_text","button","excel","print","csv","language","filter","info","pagination","first","previous","next","last","show_length_menu","show_filter","show_pagination","show_info","records","currentRecord","getData","bind","_assertThisInitialized","status","pageData","AdminAddModal","AdminUpdateModal","faPlus","ReactDatatable","onPageChange","pageChange","ToastContainer","wallet","Users","addCarousel","carouselData","CarouselAdd","handleImg","file","files","reader","FileReader","onload","imageDataUrl","result","prevState","img","readAsDataURL","onUserCarousel","newCarousel","options","onClose","document","getElementById","heroTitle","heroText","devices","freetoplay","playtoearn","Status","FormData","append","getdata","display","src","CarouselUpdateModal","split","onCarouselUpdate","date","_nextProps$record","startsWithPrefix","startsWith","imgflg","_this3","CarouselAddModal","StaffAdd","onStaff","newStaff","username","role","Content-Type","StaffUpdateModal","onStaffUpdate","Staff","StaffAddModal","AboutAdd","onAbout","newAbout","title","onAboutUpdate","About","AboutAddModal","AboutUpdateModal","hideDuration","timeOut","PlanCom","onChangePlan","index","RoadmapAdd","planChange","plans","Number","replace","onAddPlan","planArr","onDeletePlan","pop","onCLose","onUserRoadmap","newRoadmap","year","map","_useState","useState","_useState2","_slicedToArray","planinfo","setPlanInfo","useEffect","RoadmapUpdate","patch","prev","RoadmapCard","slice","pl","i","onEdit","onDelete","Roadmap","delete","_this4","RoadmapAddModal","RoadmapUpdateModal","jwtToken","currentTime","Date","now","exp","window","location","App","Provider","Router","Switch","exact","path","PrivateRoute","Carousel","NotFound","__webpack_require__","r","__webpack_exports__","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","jquery__WEBPACK_IMPORTED_MODULE_4__","jquery__WEBPACK_IMPORTED_MODULE_4___default","jQuery","ReactDOM","click","toggleClass","on","val"],"mappings":"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","file":"static/js/main.c55b1706.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    console.log(userData);\r\n    axios\r\n        .post(\"/api/register\", userData)\r\n        .then(res => history.push(\"/admin/login\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const loginUser = userData => dispatch => {\r\n   \r\n    axios\r\n        .post(\"/api/login\", userData)\r\n        .then(res => {\r\n            \r\n            const { token } = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            setAuthToken(token);\r\n            const decoded = jwt_decode(token);\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const USER_ADD = \"USER_ADD\";\r\nexport const USER_UPDATE = \"USER_UPDATE\";\r\nexport const ADD_CAROUSEL = \"ADD_CAROUSEL\";\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser} from \"../../actions/authActions\";\r\n\r\nclass Navbar extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n        const { user } = this.props.auth;\r\n        return (\r\n            <div className=\"container-fluid p-0\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <a className=\"navbar-brand\" href=\"/admin\">Marmoset Admin</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"settings\"\r\n                                   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Settings\r\n                                </a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"settings\">\r\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={this.onLogoutClick}>Logout</a>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\" onClick={this.onLogoutClick}>Logout ({user.name}) <FontAwesomeIcon icon={faSignOutAlt} /> </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser} from \"../../actions/authActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n        //const { user } = this.props.auth;\r\n        return (\r\n            <div className=\"border-right h-100\" id=\"sidebar-wrapper\">\r\n                <div className=\"list-group list-group-flush\">\r\n                    <Link to=\"/admin/botsetting\" className=\"list-group-item list-group-item-action\">BotSetting</Link>\r\n                    <Link to=\"/admin/dashboard\" className=\"list-group-item list-group-item-action\">Dashboard</Link>\r\n                    <Link to=\"/admin/admin\" className=\"list-group-item list-group-item-action\">Admin</Link>\r\n                    <Link to=\"/admin/Users\" className=\"list-group-item list-group-item-action\">Users</Link>\r\n                    <Link to=\"/admin/carousel\" className=\"list-group-item list-group-item-action\">Carousel</Link>\r\n                    <Link to=\"/admin/staff\" className=\"list-group-item list-group-item-action\">Staff</Link>\r\n                    <Link to=\"/admin/about\" className=\"list-group-item list-group-item-action\">About</Link>\r\n                    <Link to=\"/admin/roadmap\" className=\"list-group-item list-group-item-action\">Roadmap</Link>\r\n                    <button className=\"list-group-item list-group-item-action\" onClick={this.onLogoutClick}>Logout <FontAwesomeIcon icon={faSignOutAlt} /></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport axios from \"axios\";\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\nclass Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            buy:\"\",\r\n            url:\"\",\r\n            shop:\"\"\r\n        };\r\n\r\n    }\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onClick = e => {\r\n        axios\r\n        .post(\"/api/urldata\", this.state)\r\n        .then(res =>{\r\n            toastr.success(\"URL added successfully!\");\r\n            // this.setState({});\r\n        }).catch(err =>{\r\n\r\n        });\r\n    };\r\n    componentDidMount(){\r\n        axios.get(\"/api/urldata\").then((res) => {\r\n            console.log(res.data);\r\n            this.setState(res.data);\r\n          }).catch();\r\n    }\r\n    render() {\r\n        //const { user } = this.props.auth;\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-2\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <h1 className=\"mt-2 text-primary\">Setting URLs</h1>\r\n                            <div className=\"row px-2\">\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-primary text-white shadow-lg\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">BuyNFT</h5>\r\n                                            <input type=\"text\" id=\"buy\" value={this.state.buy} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row px-2\">\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-primary text-white shadow-lg\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Events</h5>\r\n                                            <input type=\"text\" id=\"event\" value={this.state.event} onChange={this.onChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row px-2\">\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-primary text-white shadow-lg\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Shop</h5>\r\n                                            <input type=\"text\" id=\"shop\" value={this.state.shop} onChange={this.onChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row px-2\">\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-primary text-white shadow-lg\">\r\n                                        <div className=\"card-body\">\r\n                                            <button onClick={this.onClick}>Save</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport axios from \"axios\";\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\nimport Toggle from 'react-toggle'\r\nclass BotSetting extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            discord:false,\r\n            telegram:false\r\n        };\r\n\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.checked }, () => {\r\n            axios.post(\"/api/botsetting\", this.state)\r\n              .then(res => {\r\n                this.getBotSettingData();\r\n              })\r\n              .catch(err => {\r\n                this.getBotSettingData();\r\n              });\r\n          });\r\n          \r\n    };\r\n    getBotSettingData = ()=>{\r\n        axios.get(\"/api/botsetting\").then((res) => {\r\n            const {discord,telegram} = res.data;\r\n            console.log(discord,telegram);\r\n            this.setState({ discord, telegram });\r\n          }).catch();\r\n    }\r\n    componentDidMount(){\r\n        this.getBotSettingData();\r\n    }\r\n    render() {\r\n        //const { user } = this.props.auth;\r\n        console.log(this.state);\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-2\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <h1 className=\"mt-2 text-primary\">Setting Bots</h1>\r\n                            <div className=\"row px-2\">\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-primary text-white shadow-lg\">\r\n                                        <div className=\"card-body botSettingLayout\">\r\n                                            {/* <input type=\"text\" id=\"buy\" value={this.state.buy} onChange={this.onChange}/> */}\r\n                                            <label>\r\n                                                <span>Discord</span>\r\n                                                <Toggle\r\n                                                    id=\"discord\"\r\n                                                    checked={this.state.discord}\r\n                                                    className='custom-classname'\r\n                                                    onChange={this.onChange}\r\n                                                />\r\n                                                </label>\r\n\r\n                                                <label>\r\n                                                <span>Telegram</span>\r\n                                                <Toggle\r\n                                                    id=\"telegram\"\r\n                                                    checked={this.state.telegram}\r\n                                                    className='custom-classname'\r\n                                                    onChange={this.onChange}\r\n                                                />\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBotSetting.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(BotSetting);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/admin/dashboard\");\r\n        }\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"/admin/dashboard\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-4 mx-auto mt-5 card shadow-lg\">\r\n                        <div className=\"card-body p-1\">\r\n                            <h2 className=\"text-center text-primary mt-3\">Login</h2>\r\n                            <form noValidate onSubmit={this.onSubmit} className=\"white\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.email\r\n                                    })}\r\n                                />\r\n                                <span className=\"text-danger\">{errors.email}</span>\r\n                                <br/>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.password\r\n                                    })}\r\n                                />\r\n                                <span className=\"text-danger\">{errors.password}</span>\r\n                                <p className=\"text-center pb-0 mt-2\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-large btn-primary mt-2 px-5\">\r\n                                        Login\r\n                                    </button>\r\n                                </p>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h1>\r\n                           Not Found\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/admin/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter  } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/admin/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n                            home\r\n                        </Link>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Register</b> below\r\n                            </h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Already have an account? <Link to=\"/admin/login\">Log in</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.name}\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    error={errors.name}\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.name\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <span className=\"red-text\">{errors.name}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">{errors.email}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">{errors.password}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password2\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password2\">Confirm Password</label>\r\n                                <span className=\"red-text\">{errors.password2}</span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(Register));","import {\r\n    SET_CURRENT_USER,\r\n    USER_ADD,\r\n    USER_LOADING,\r\n    USER_UPDATE\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false,\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_ADD:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_UPDATE:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload,\r\n            };\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {ADD_CAROUSEL\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    loading: false,\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_CAROUSEL:\r\n            \r\n        console.log(action);\r\n        \r\n        return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport carouselReducer from \"./carouselReducer\";\r\nimport errorReducer from \"./errorReducers\";\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    carousel:carouselReducer,\r\n    errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS,\r\n    USER_ADD,\r\n    USER_UPDATE\r\n} from \"./types\";\r\n\r\nexport const addUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/user-add\", userData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: USER_ADD,\r\n                payload: res,\r\n            })\r\n        ).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};\r\n\r\nexport const updateUser = (userData) => dispatch => {\r\n    axios\r\n        .post(\"/api/user-update\", userData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: USER_UPDATE,\r\n                payload: res,\r\n            })\r\n        ).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass UserAddModal extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onUserAdd = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.addUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"add-user-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Admin</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserAdd} id=\"add-user\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"email\">Email</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.email}\r\n                                                error={errors.email}\r\n                                                id=\"email\"\r\n                                                type=\"email\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.email\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.email}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password\">Password</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.password}\r\n                                                error={errors.password}\r\n                                                id=\"password\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.password\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.password}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password2\">Confirm Password</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.password2}\r\n                                                id=\"password2\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.password2\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.password2}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserAddModal.propTypes = {\r\n    addUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addUser }\r\n)(withRouter(UserAddModal));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass UserUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.record.id,\r\n            name: this.props.record.name,\r\n            email: this.props.record.email,\r\n            password: '',\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.record) {\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                name: nextProps.record.name,\r\n                email: nextProps.record.email,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        if (e.target.id === 'user-update-name') {\r\n            this.setState({ name: e.target.value });\r\n        }\r\n        if (e.target.id === 'user-update-email') {\r\n            this.setState({ email: e.target.value });\r\n        }\r\n        if (e.target.id === 'user-update-password') {\r\n            this.setState({ password: e.target.value });\r\n        }\r\n    };\r\n\r\n    onUserUpdate = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            _id: this.state.id,\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.updateUser(newUser);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-user-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Admin</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserUpdate} id=\"update-user\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"user-update-id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"user-update-name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"email\">Email</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.email}\r\n                                                error={errors.email}\r\n                                                id=\"user-update-email\"\r\n                                                type=\"email\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.email\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.email}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password\">Password</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                data-reset-input={true}\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                error={errors.password}\r\n                                                id=\"user-update-password\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.password\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.password}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserUpdateModal.propTypes = {\r\n    updateUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(UserUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport AdminAddModal from \"../partials/AdminAddModal\";\r\nimport AdminUpdateModal from \"../partials/AdminUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Admin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"name\",\r\n                text: \"Name\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"email\",\r\n                text: \"Email\",\r\n                className: \"email\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"date\",\r\n                text: \"Date\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-user-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                password2: '',\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .post(\"/api/admin-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/admin-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <AdminAddModal/>\r\n                    <AdminUpdateModal record={this.state.currentRecord}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-user-modal\"><FontAwesomeIcon icon={faPlus}/> Add User</button>\r\n                            <h1 className=\"mt-2 text-primary\">Admin List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nAdmin.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Admin);\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass UserAddModal extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            discord: \"\",\r\n            telegram: \"\",\r\n            wallet: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onUserAdd = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            discord: this.state.discord,\r\n            telegram: this.state.telegram,\r\n            wallet: this.state.wallet\r\n        };\r\n        this.props.addUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"add-user-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add User</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserAdd} id=\"add-user\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Discord</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.discord}\r\n                                                id=\"discord\"\r\n                                                type=\"text\"\r\n                                                error={errors.discord}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.discord\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.discord}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"email\">Telegram</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.telegram}\r\n                                                error={errors.telegram}\r\n                                                id=\"telegram\"\r\n                                                type=\"email\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.email\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.telegram}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password\">Wallet</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.wallet}\r\n                                                error={errors.wallet}\r\n                                                id=\"wallet\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.wallet\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.wallet}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserAddModal.propTypes = {\r\n    addUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addUser }\r\n)(withRouter(UserAddModal));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass UserUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.record.id,\r\n            discord: this.props.record.discord,\r\n            telegram: this.props.record.telegram,\r\n            wallet:this.props.record.wallet,\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        if (nextProps.record) {\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                discord: nextProps.record.discord,\r\n                telegram: nextProps.record.telegram,\r\n                wallet:nextProps.record.wallet\r\n            })\r\n         \r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        if (e.target.id === 'user-update-telegram') {\r\n            this.setState({ telegram: e.target.value });\r\n        }\r\n        if (e.target.id === 'user-update-discord') {\r\n            this.setState({ discord: e.target.value });\r\n        }\r\n    };\r\n\r\n    onUserUpdate = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            _id: this.state.id,\r\n            discord: this.state.discord,\r\n            telegram: this.state.telegram,\r\n            wallet: this.state.wallet\r\n            \r\n        };\r\n        this.props.updateUser(newUser);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        console.log(this.state);\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-user-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update User</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserUpdate} id=\"update-user\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"user-update-id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Discord</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.discord}\r\n                                                id=\"user-update-discord\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"email\">Telegram</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.telegram}\r\n                                                error={errors.telegram}\r\n                                                id=\"user-update-telegram\"\r\n                                                type=\"email\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.telegram\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.telegram}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password\">Wallet</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                error={errors.wallet}\r\n                                                id=\"user-update-wallet\"\r\n                                                type=\"text\"\r\n                                                value={this.state.wallet}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.wallet\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.wallet}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserUpdateModal.propTypes = {\r\n    updateUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(UserUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport UserAddModal from \"../partials/UserAddModal\";\r\nimport UserUpdateModal from \"../partials/UserUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"discord\",\r\n                text: \"Discord\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"telegram\",\r\n                text: \"Telegram\",\r\n                className: \"email\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"wallet\",\r\n                text: \"Wallet\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"nfts\",\r\n                text: \"nfts\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-user-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                password2: '',\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .post(\"/api/user-data\")\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/user-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <UserAddModal/>\r\n                    <UserUpdateModal record={this.state.currentRecord}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-user-modal\"><FontAwesomeIcon icon={faPlus}/> Add User</button>\r\n                            <h1 className=\"mt-2 text-primary\">Users List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nUsers.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Users);\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS,\r\n    ADD_CAROUSEL\r\n} from \"./types\";\r\n\r\nexport const addCarousel = (carouselData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/carousel-add\", carouselData)\r\n        .then(res =>{\r\n            \r\n            dispatch({\r\n                type: ADD_CAROUSEL,\r\n                payload: res,\r\n            });\r\n        }\r\n        ).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};\r\n","import React,{useNavigate} from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCarousel } from \"../../actions/carouselActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nclass CarouselAdd extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            heroTitle: \"\",\r\n            heroText: \"\",\r\n            img: \"\",\r\n            devices: \"\",\r\n            freetoplay: \"\",\r\n            playtoearn: \"\",\r\n            Status: \"\"\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    handleImg = e => {\r\n        try{\r\n            var file = e.target.files[0];\r\n            var reader = new FileReader();\r\n            // Set the onload event handler\r\n            reader.onload = (e) => {\r\n              var imageDataUrl = e.target.result;\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                img: imageDataUrl,\r\n                file:file\r\n              }));\r\n          \r\n              // Perform further actions with the image data URL\r\n            };\r\n            // Read the selected file as a data URL\r\n            reader.readAsDataURL(file);\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n \r\n    }\r\n\r\n    onUserCarousel = e => {\r\n        e.preventDefault();\r\n    \r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('add-carousel-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    heroTitle: \"\",\r\n                    heroText: \"\",\r\n                    img: \"\",\r\n                    devices: \"\",\r\n                    freetoplay: \"\",\r\n                    playtoearn: \"\",\r\n                    Status: \"\"\r\n                });\r\n            }\r\n        };\r\n        var newCarousel;\r\n        if(this.state.file === \"\"){\r\n            newCarousel = {\r\n                heroTitle: this.state.heroTitle,\r\n                heroText: this.state.heroText,\r\n                img: this.state.img,\r\n                devices: this.state.devices,\r\n                freetoplay: this.state.freetoplay,\r\n                playtoearn: this.state.playtoearn,\r\n                Status: this.state.Status\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const newCarousel = new FormData();\r\n            newCarousel.append('heroTitle', this.state.heroTitle);\r\n            newCarousel.append('heroText', this.state.heroText);\r\n            newCarousel.append('img', this.state.img);\r\n            newCarousel.append('devices', this.state.devices);\r\n            newCarousel.append('freetoplay', this.state.freetoplay);\r\n            newCarousel.append('playtoearn', this.state.playtoearn);\r\n            newCarousel.append('Status', this.state.Status);\r\n        }\r\n\r\n        axios\r\n        .post(\"/api/carousel-add\", newCarousel)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        })\r\n        .catch(err =>{});\r\n    };\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"modal fade\" id=\"add-carousel-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Carousel</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserCarousel} id=\"add-user\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"heroTitle\">heroTitle</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.heroTitle}\r\n                                                id=\"heroTitle\"\r\n                                                type=\"text\"\r\n                                                // error={errors.name}\r\n                                                className={classnames(\"form-control\")}/>\r\n                                            {/* <span className=\"text-danger\">{errors.name}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"heroText\">heroText</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.heroText}\r\n                                                // error={errors.heroText}\r\n                                                id=\"heroText\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"img\">img</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\" style={{display: \"flex\"}}>\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                            <img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>\r\n                                            {/* {\r\n                                                this.state.img.startsWith(\"data:image\")?<img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>:\r\n                                                <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                // error={errors.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                            }\r\n                                            <input onChange={this.handleImg}\r\n                                                id=\"img-file\" type=\"file\"/> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"devices\">devices</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.devices}\r\n                                                id=\"devices\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"freetoplay\">freetoplay</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.freetoplay}\r\n                                                id=\"freetoplay\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"playtoearn\">playtoearn</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.playtoearn}\r\n                                                id=\"playtoearn\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"Status\">Status</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.Status}\r\n                                                id=\"Status\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add Carousel\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCarouselAdd.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addCarousel }\r\n)(withRouter(CarouselAdd));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass CarouselUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            heroTitle: \"\",\r\n            heroText: \"\",\r\n            img: \"\",\r\n            devices: \"\",\r\n            freetoplay: \"\",\r\n            playtoearn: \"\",\r\n            Status: \"\",\r\n            date: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.record) {\r\n            const myVariable = nextProps?.record?.img || '';\r\n            const startsWithPrefix = myVariable.startsWith('data:image/');\r\n            console.log(startsWithPrefix);\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                heroTitle: nextProps.record.heroTitle,\r\n                heroText: nextProps.record.heroText,\r\n                img: nextProps.record.img,\r\n                imgflg:startsWithPrefix,\r\n                devices: nextProps.record.devices,\r\n                freetoplay: nextProps.record.freetoplay,\r\n                playtoearn: nextProps.record.playtoearn,\r\n                Status: nextProps.record.Status,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id.split(\"-\")[0]]: e.target.value });\r\n    };\r\n    handleImg = e => {\r\n        try{\r\n            var file = e.target.files[0];\r\n            var reader = new FileReader();\r\n            // Set the onload event handler\r\n            reader.onload = (e) => {\r\n              var imageDataUrl = e.target.result;\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                img: imageDataUrl,\r\n                file:file\r\n              }));\r\n          \r\n              // Perform further actions with the image data URL\r\n            };\r\n            // Read the selected file as a data URL\r\n            reader.readAsDataURL(file);\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n \r\n    }\r\n    onCarouselUpdate = e => {\r\n        e.preventDefault();\r\n        \r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('update-carousel-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    heroTitle: \"\",\r\n                    heroText: \"\",\r\n                    img: \"\",\r\n                    devices: \"\",\r\n                    freetoplay: \"\",\r\n                    playtoearn: \"\",\r\n                    Status: \"\"\r\n                });\r\n            }\r\n        };\r\n        var newCarousel;\r\n        if(this.state.file === \"\"){\r\n            newCarousel = {\r\n                heroTitle: this.state.heroTitle,\r\n                heroText: this.state.heroText,\r\n                img: this.state.img,\r\n                devices: this.state.devices,\r\n                freetoplay: this.state.freetoplay,\r\n                playtoearn: this.state.playtoearn,\r\n                Status: this.state.Status\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const newCarousel = new FormData();\r\n                newCarousel.append('heroTitle', this.state.heroTitle);\r\n                newCarousel.append('heroText', this.state.heroText);\r\n                newCarousel.append('img', this.state.img);\r\n                newCarousel.append('devices', this.state.devices);\r\n                newCarousel.append('freetoplay', this.state.freetoplay);\r\n                newCarousel.append('playtoearn', this.state.playtoearn);\r\n                newCarousel.append('Status', this.state.Status);\r\n        }\r\n\r\n\r\n        axios\r\n        .post(\"/api/carousel-update\", newCarousel)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        }).catch(err =>{\r\n\r\n        });\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-carousel-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Carousel</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onCarouselUpdate} id=\"update-user\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">heroTitle</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.heroTitle}\r\n                                                id=\"heroTitle\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">heroText</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.heroText}\r\n                                                id=\"heroText-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">img</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                            <img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">devices</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.devices}\r\n                                                id=\"devices-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">freetoplay</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.freetoplay}\r\n                                                id=\"freetoplay-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">playtoearn</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.playtoearn}\r\n                                                id=\"playtoearn-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Status</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.Status}\r\n                                                id=\"Status-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCarouselUpdateModal.propTypes = {\r\n    updateUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(CarouselUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport CarouselAddModal from \"../partials/CarouselAddModal\";\r\nimport CarouselUpdateModal from \"../partials/CarouselUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"heroTitle\",\r\n                text: \"heroTitle\",\r\n                className: \"heroTitle\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"date\",\r\n                text: \"Date\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-carousel-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                password2: '',\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .post(\"/api/carousel-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data});\r\n            })\r\n            .catch();\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/carousel-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <CarouselAddModal getdata={()=>this.getData()}/>\r\n                    <CarouselUpdateModal record={this.state.currentRecord} getdata={()=>this.getData()}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-carousel-modal\"><FontAwesomeIcon icon={faPlus}/> Add Carousel</button>\r\n                            <h1 className=\"mt-2 text-primary\">Carousel List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nUsers.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Users);\r\n","import React,{useNavigate} from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCarousel } from \"../../actions/carouselActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nclass StaffAdd extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            discord: \"\",\r\n            telegram: \"\",\r\n            role: \"\",\r\n            img: \"\",\r\n            file:\"\"\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onStaff = e => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('add-staff-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    username: \"\",\r\n                    discord: \"\",\r\n                    telegram: \"\",\r\n                    role: \"\",\r\n                    img: \"\"\r\n                });\r\n            }\r\n        };\r\n        var newStaff;\r\n        if(this.state.file === \"\"){\r\n            newStaff = {\r\n                username: this.state.username,\r\n                discord: this.state.discord,\r\n                telegram: this.state.telegram,\r\n                role: this.state.role,\r\n                img:this.state.img\r\n            }\r\n        }\r\n        else\r\n        {\r\n            newStaff = new FormData();\r\n            newStaff.append('file', this.state.file);\r\n            newStaff.append('username', this.state.username);\r\n            newStaff.append('discord', this.state.discord);\r\n            newStaff.append('telegram', this.state.telegram);\r\n            newStaff.append('role', this.state.role);\r\n        }\r\n\r\n        axios\r\n        .post(\"/api/staff-add\", newStaff,{\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        })\r\n        .catch(err =>{});\r\n    };\r\n    handleImg = e => {\r\n        try{\r\n            var file = e.target.files[0];\r\n\r\n            var reader = new FileReader();\r\n            // Set the onload event handler\r\n            reader.onload = (e) => {\r\n              var imageDataUrl = e.target.result;\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                img: imageDataUrl,\r\n                file:file\r\n              }));\r\n              // Perform further actions with the image data URL\r\n            };\r\n            // Read the selected file as a data URL\r\n            reader.readAsDataURL(file);\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n \r\n    }\r\n    render() {\r\n       \r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"modal fade\" id=\"add-staff-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Staff</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onStaff} id=\"add-staff\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"title\">Username</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.username}\r\n                                                id=\"username\"\r\n                                                type=\"text\"\r\n                                                // error={errors.name}\r\n                                                className={classnames(\"form-control\")}/>\r\n                                            {/* <span className=\"text-danger\">{errors.name}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"text\">Discord</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.discord}\r\n                                                // error={errors.heroText}\r\n                                                id=\"discord\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"text\">Telegram</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.telegram}\r\n                                                // error={errors.heroText}\r\n                                                id=\"telegram\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"text\">Role</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.role}\r\n                                                // error={errors.heroText}\r\n                                                id=\"role\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"img\">img</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\" style={{display: \"flex\"}}>\r\n                                            {\r\n                                                this.state.img.startsWith(\"data:image\")?<img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>:\r\n                                                <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                // error={errors.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                            }\r\n                                            <input onChange={this.handleImg}\r\n                                                id=\"img-file\" type=\"file\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-staff\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add Staff\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nStaffAdd.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addCarousel }\r\n)(withRouter(StaffAdd));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass StaffUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            username: \"\",\r\n            telegram: \"\",\r\n            discord: \"\",\r\n            role:\"\",\r\n            img: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps.record);\r\n        if (nextProps.record) {\r\n            const myVariable = nextProps?.record?.img || '';\r\n            const startsWithPrefix = myVariable.startsWith('data:image/');\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                username: nextProps.record.username,\r\n                telegram: nextProps.record.telegram,\r\n                discord: nextProps.record.discord,\r\n                role: nextProps.record.role,\r\n                img: nextProps.record.img,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id.split(\"-\")[0]]: e.target.value });\r\n    };\r\n    handleImg = e => {\r\n        try{\r\n            var file = e.target.files[0];\r\n            var reader = new FileReader();\r\n            // Set the onload event handler\r\n            reader.onload = (e) => {\r\n              var imageDataUrl = e.target.result;\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                img: imageDataUrl,\r\n                file:file\r\n              }));\r\n          \r\n              // Perform further actions with the image data URL\r\n            };\r\n            // Read the selected file as a data URL\r\n            reader.readAsDataURL(file);\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n \r\n    }\r\n    onStaffUpdate = e => {\r\n        e.preventDefault();\r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('update-staff-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    username:\"\",\r\n                    telegram: \"\",\r\n                    discord:\"\", \r\n                    role:\"\", \r\n                    img: \"\"\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        var newStaff;\r\n        if(this.state.file === \"\"){\r\n            newStaff = {\r\n                username: this.state.username,\r\n                discord: this.state.discord,\r\n                telegram: this.state.telegram,\r\n                role: this.state.role,\r\n                img:this.state.img\r\n            }\r\n        }\r\n        else\r\n        {\r\n            newStaff = new FormData();\r\n            newStaff.append('file', this.state.file);\r\n            newStaff.append('username', this.state.username);\r\n            newStaff.append('discord', this.state.discord);\r\n            newStaff.append('telegram', this.state.telegram);\r\n            newStaff.append('role', this.state.role);\r\n        }\r\n        axios\r\n        .post(\"/api/staff-update\", newStaff)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        }).catch(err =>{\r\n\r\n        });\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-staff-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Staff</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onStaffUpdate} id=\"update-staff\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.username}\r\n                                                id=\"username\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Telegram</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.telegram}\r\n                                                id=\"telegram\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Discord</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.discord}\r\n                                                id=\"discord\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Role</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.role}\r\n                                                id=\"role\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Image</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-staff\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update Staff\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nStaffUpdateModal.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(StaffUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport StaffAddModal from \"../partials/StaffAddModal\";\r\nimport StaffUpdateModal from \"../partials/StaffUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Staff extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"username\",\r\n                text: \"Username\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-staff-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .get(\"/api/staff-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n       \r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/staff-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <StaffAddModal getData={this.getData}/>\r\n                    <StaffUpdateModal getData={this.getData} record={this.state.currentRecord}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-staff-modal\"><FontAwesomeIcon icon={faPlus}/>Staff User</button>\r\n                            <h1 className=\"mt-2 text-primary\">Staff List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nStaff.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Staff);\r\n","import React,{useNavigate} from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCarousel } from \"../../actions/carouselActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nclass AboutAdd extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: \"\",\r\n            text: \"\",\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onAbout = e => {\r\n        e.preventDefault();\r\n        const newAbout = {\r\n            title: this.state.title,\r\n            text: this.state.text,\r\n        };\r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('add-about-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    title: \"\",\r\n                    text: \"\"\r\n                });\r\n            }\r\n        };\r\n\r\n        axios\r\n        .post(\"/api/about-add\", newAbout)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        })\r\n        .catch(err =>{});\r\n    };\r\n    render() {\r\n       \r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"modal fade\" id=\"add-about-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add About</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onAbout} id=\"add-about\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"heroTitle\">Title</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.title}\r\n                                                id=\"title\"\r\n                                                type=\"text\"\r\n                                                // error={errors.name}\r\n                                                className={classnames(\"form-control\")}/>\r\n                                            {/* <span className=\"text-danger\">{errors.name}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"text\">Text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <textarea\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.text}\r\n                                                // error={errors.heroText}\r\n                                                id=\"text\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-about\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add About\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAboutAdd.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addCarousel }\r\n)(withRouter(AboutAdd));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass CarouselUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            title: \"\",\r\n            text: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.record) {\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                title: nextProps.record.title,\r\n                text: nextProps.record.text,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-about-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id.split(\"-\")[0]]: e.target.value });\r\n    };\r\n    onAboutUpdate = e => {\r\n        e.preventDefault();\r\n        const newAbout = {\r\n            _id:this.state.id,\r\n            title: this.state.title,\r\n            text: this.state.text,\r\n        };\r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('update-about-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    title: \"\",\r\n                    text: \"\",\r\n                });\r\n            }\r\n        };\r\n        axios\r\n        .post(\"/api/about-update\", newAbout)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        }).catch(err =>{});\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-about-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update About</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onAboutUpdate} id=\"update-about\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Title</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.title}\r\n                                                id=\"title\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <textarea\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.text}\r\n                                                // error={errors.heroText}\r\n                                                id=\"text-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-about\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update About\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCarouselUpdateModal.propTypes = {\r\n    updateUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(CarouselUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport AboutAddModal from \"../partials/AboutAddModal\";\r\nimport AboutUpdateModal from \"../partials/AboutUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"title\",\r\n                text: \"Title\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"date\",\r\n                text: \"Date\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-about-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .get(\"/api/about-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch();\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/about-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <AboutAddModal getdata={this.getData}/>\r\n                    <AboutUpdateModal record={this.state.currentRecord} getdata={this.getData}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-about-modal\"><FontAwesomeIcon icon={faPlus}/>Add About</button>\r\n                            <h1 className=\"mt-2 text-primary\">About List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nAbout.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(About);\r\n","import React,{useEffect, useNavigate, useState} from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\ntoastr.options = {\r\n  hideDuration: 500,\r\n  timeOut: 3000\r\n}\r\nconst PlanCom = ({info,onChangePlan,index})=>{\r\n    return(\r\n        <div className=\"row mt-2\">\r\n            <div className=\"col-md-3\">\r\n                <label htmlFor={`plan${index}`}>{`Plan ${index+1}`}</label>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n                <input\r\n                    onChange={onChangePlan}\r\n                    value={info}\r\n                    id={`plan${index}`}\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control\")}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass RoadmapAdd extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            year: \"\",\r\n            plans:[\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\"\r\n            ]\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n       \r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onChangePlan = e => {\r\n        var planChange = this.state.plans;\r\n            planChange[Number(e.target.id.replace(\"plan\",\"\"))] = e.target.value;\r\n        this.setState({ plans: planChange });\r\n    };\r\n    onAddPlan = e => {\r\n        // this.setState({ [\"plans\"]:  });\r\n        var planArr = this.state.plans.push(\"\");\r\n        this.setState({...this.state,planArr});\r\n    };\r\n    onDeletePlan = e => {\r\n        // this.setState({ [\"plans\"]:  });\r\n        var planArr = this.state.plans.pop();\r\n        console.log(planArr);\r\n        this.setState({...this.state,planArr});\r\n    };\r\n    onCLose = e => {\r\n        this.setState({});\r\n    };\r\n\r\n    onUserRoadmap = e => {\r\n        e.preventDefault();\r\n        console.log(this.state.plans);\r\n        const newRoadmap = {\r\n            year:this.state.year,\r\n            plans:this.state.plans\r\n        }\r\n        axios\r\n        .post(\"/api/roadmap-add\", newRoadmap)\r\n        .then(res =>{\r\n            this.props.getData();\r\n            toastr.success(\"Roadmap added successfully!\");\r\n            this.setState({});\r\n        }).catch(err =>{\r\n\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"add-roadmap-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Roadmap</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserRoadmap} id=\"add-roadmap\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"year\">Year</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.year}\r\n                                                id=\"year\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.plans.map((info,index)=> <PlanCom info={info} index={index} onChangePlan={this.onChangePlan} />)\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.onAddPlan} >Add Plan</button>\r\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.onDeletePlan} >Delete Plan</button>\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.onCLose} >Close</button>\r\n                                <button\r\n                                    form=\"add-roadmap\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add Roadmap\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRoadmapAdd.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {  }\r\n)(withRouter(RoadmapAdd));\r\n","import React,{useEffect, useState} from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\ntoastr.options = {\r\n  hideDuration: 500,\r\n  timeOut: 3000\r\n}\r\n\r\nconst PlanCom = ({info,onChangePlan,index})=>{\r\n    const [planinfo,setPlanInfo] = useState(\"---\");\r\n    useEffect(()=>{\r\n        setPlanInfo(info);\r\n    },[info]);\r\n    return(\r\n        <div className=\"row mt-2\">\r\n            <div className=\"col-md-3\">\r\n                <label htmlFor={`plan${index}`}>{`Plan ${index+1}`}</label>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n                {\r\n                    console.log(planinfo)\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onChangePlan}\r\n                    value={planinfo}\r\n                    id={`plan${index}`}\r\n                    className={classnames(\"form-control\")}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass RoadmapUpdate extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            year: \"\",\r\n            plans:[\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onUserRoadmap = this.onUserRoadmap.bind(this);\r\n        this.onChangePlan = this.onChangePlan.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps,prev) {\r\n            this.setState(nextProps.record);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onChangePlan = e => {\r\n        var planChange = this.state.plans;\r\n            planChange[Number(e.target.id.replace(\"plan\",\"\"))] = e.target.value;\r\n        this.setState({ plans: planChange });\r\n    };\r\n    onAddPlan = e => {\r\n        var planArr = this.state.plans.push(\"\");\r\n        this.setState({...this.state,planArr});\r\n    };\r\n    onDeletePlan = e => {\r\n        var planArr = this.state.plans.pop();\r\n        this.setState({...this.state,planArr});\r\n    };\r\n\r\n    onUserRoadmap = e => {\r\n        e.preventDefault();\r\n        axios\r\n        .patch(\"/api/roadmap-update\", this.state)\r\n        .then(res =>{\r\n            this.props.getData();\r\n            toastr.success(res.data.message);\r\n            this.setState({});\r\n        }).catch(err =>{\r\n\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-roadmap-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Roadmap</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserRoadmap} id=\"update-roadmap\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"year\">Road</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.year}\r\n                                                id=\"year\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.plans.map((info,index)=> <PlanCom info={info} key={index} index={index} onChangePlan={this.onChangePlan} />)\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.onAddPlan} >Add Plan</button>\r\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.onDeletePlan} >Delete Plan</button>\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-roadmap\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update Roadmap\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRoadmapUpdate.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {  }\r\n)(withRouter(RoadmapUpdate));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport RoadmapAddModal from \"../partials/RoadmapAddModal\";\r\nimport RoadmapUpdateModal from \"../partials/RoadmapUpdateModal\";\r\nconst RoadmapCard = (props)=>{\r\n\r\n    return(\r\n        <div className=\"card bg-dark text-white shadow-lg marmosetCard\">\r\n            <div className=\"card-header\">\r\n                <h3 className=\"card-title\">{props.record.year}</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                \r\n                {\r\n                    props.record.plans.slice(0,4).map((pl,i)=><p key={i} className=\"card-text\">{pl}</p>)\r\n                }\r\n                \r\n            </div>\r\n            <div className=\"card-footer\" >                    \r\n                <button className=\"btn btn-light btn-primary btn-sm\" \r\n                        onClick={()=>props.onEdit(props.record)}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#update-roadmap-modal\">Edit</button>\r\n                <button className=\"btn btn-light\" onClick={()=>props.onDelete(props.record)}>Delete</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Roadmap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            records: [],\r\n            currentRecord: {\r\n            }\r\n        };\r\n\r\n\r\n        this.getData = this.getData.bind(this);\r\n        this.editRecord = this.editRecord.bind(this);\r\n        this.deleteRecord = this.deleteRecord.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .get(\"/api/roadmap-data\")\r\n            .then(res => {\r\n                this.setState({records:res.data});\r\n            })\r\n            .catch();\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        console.log(record);\r\n        axios\r\n            .delete(\"/api/roadmap-delete/\"+record._id)\r\n            .then(res => {\r\n                console.log(res.data.message);\r\n                this.getData();\r\n            })\r\n            .catch();\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <RoadmapAddModal getData={()=>this.getData()}/>\r\n                    <RoadmapUpdateModal record={this.state.currentRecord}\r\n                                        editRecord = {()=>this.editRecord(this.state.currentRecord)}\r\n                                        getData={()=>this.getData()}\r\n\r\n                                    />\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" \r\n                                    data-toggle=\"modal\" \r\n                                    data-target=\"#add-roadmap-modal\"\r\n                                    onClick={()=>this.editRecord(this.state.currentRecord)}\r\n                                    >\r\n                                    \r\n                                <FontAwesomeIcon icon={faPlus}/>Add Roadmap</button>\r\n                            <h1 className=\"mt-2 text-primary\">Roadmap List</h1>\r\n                            <div className=\"marmosetCard_Board\">\r\n                            {\r\n                                this.state.records.map((record,index)=>{\r\n                                    return(<RoadmapCard key={index} record={record} \r\n                                                        onDelete={()=>this.deleteRecord(record)} \r\n                                                        onEdit={()=>this.editRecord(record)}/>)})\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRoadmap.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Roadmap);\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./components/pages/Dashboard\";\r\nimport BotSetting from \"./components/pages/BotSetting\";\r\nimport React, { Component } from 'react';\r\nimport Login from \"./components/auth/Login\";\r\nimport NotFound from \"./components/layout/NotFound\";\r\nimport { Provider } from \"react-redux\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Register from \"./components/auth/Register\";\r\nimport store from \"./store\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap';\r\nimport '../node_modules/font-awesome/css/font-awesome.css';\r\nimport '../node_modules/jquery/dist/jquery.min';\r\nimport '../node_modules/popper.js/dist/popper';\r\n\r\nimport Admin from \"./components/pages/Admin\";\r\nimport Users from \"./components/pages/Users\";\r\nimport Carousel from \"./components/pages/Carousel\";\r\nimport Staff from \"./components/pages/Staff\";\r\nimport About from \"./components/pages/About\";\r\nimport Roadmap from \"./components/pages/Roadmap\";\r\n\r\nif (localStorage.jwtToken) {\r\n    const token = localStorage.jwtToken;\r\n    setAuthToken(token);\r\n    const decoded = jwt_decode(token);\r\n    store.dispatch(setCurrentUser(decoded));\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        store.dispatch(logoutUser());\r\n        window.location.href = \"./admin/login\";\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render () {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <div className=\"App\">\r\n                        <Switch>\r\n                            <Route exact path=\"/admin\" component={Login} />\r\n                            <Route exact path=\"/admin/register\" component={Register} />\r\n                            <Route exact path=\"/admin/login\" component={Login} />\r\n                            <Switch>\r\n                                <PrivateRoute exact path=\"/admin/botsetting\" component={BotSetting} />\r\n                                <PrivateRoute exact path=\"/admin/dashboard\" component={Dashboard} />\r\n                                <PrivateRoute exact path=\"/admin/admin\" component={Admin} />\r\n                                <PrivateRoute exact path=\"/admin/users\" component={Users} />\r\n                                <PrivateRoute exact path=\"/admin/carousel\" component={Carousel} />\r\n                                <PrivateRoute exact path=\"/admin/staff\" component={Staff} />\r\n                                <PrivateRoute exact path=\"/admin/about\" component={About} />\r\n                                <PrivateRoute exact path=\"/admin/roadmap\" component={Roadmap} />\r\n                            </Switch>\r\n                            <Route exact path=\"*\" component={NotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport $ from \"jquery\";\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\nglobal.jQuery = $;\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n$(\"#menu-toggle\").click(function() {\r\n    $(\"#wrapper\").toggleClass(\"toggled\");\r\n});\r\n\r\n$('.modal[data-reset=\"true\"]').on('shown.bs.modal', () =>\r\n    $(\"input[name != 'timestamp']\").val(''));\r\n\r\n$('.modal').on('shown.bs.modal', () =>\r\n    $('input[data-reset-input=\"true\"]').val(''));\r\n"],"sourceRoot":""}