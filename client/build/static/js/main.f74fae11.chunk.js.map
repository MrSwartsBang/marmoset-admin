{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/partials/Navbar.js","components/partials/Sidebar.js","components/pages/Dashboard.js","components/auth/Login.js","components/layout/NotFound.js","components/private-route/PrivateRoute.js","components/auth/Register.js","reducers/authReducers.js","reducers/carouselReducer.js","reducers/errorReducers.js","reducers/index.js","store.js","actions/userActions.js","components/partials/UserAddModal.js","components/partials/UserUpdateModal.js","components/pages/Users.js","actions/carouselActions.js","components/partials/CarouselAddModal.js","components/partials/CarouselUpdateModal.js","components/pages/Carousel.js","components/partials/StaffAddModal.js","components/partials/StaffUpdateModal.js","components/pages/Staff.js","components/partials/AboutAddModal.js","components/partials/AboutUpdateModal.js","components/pages/About.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Navbar","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","onLogoutClick","e","preventDefault","props","_createClass","key","value","user","auth","React","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","onClick","name","FontAwesomeIcon","icon","faSignOutAlt","Component","connect","state","Sidebar","Link","to","Dashboard","faList","faUserAlt","Login","onChange","setState","_defineProperty","target","onSubmit","userData","email","password","loginUser","errors","isAuthenticated","history","push","nextProps","noValidate","htmlFor","error","classnames","invalid","post","then","res","data","setItem","jwt_decode","catch","err","response","Landing","style","height","_ref","component","rest","_objectWithoutProperties","_excluded","Route","Object","assign","render","Redirect","Register","newUser","password2","registerUser","paddingLeft","width","borderRadius","letterSpacing","marginTop","console","log","withRouter","isEmpty","require","initialState","loading","combineReducers","undefined","action","_objectSpread","carousel","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","updateUser","UserAddModal","_React$Component","onUserAdd","addUser","message","$","modal","toast","position","POSITION","TOP_CENTER","data-reset","data-dismiss","autoComplete","form","UserUpdateModal","onUserUpdate","_id","record","success","data-reset-input","Users","columns","text","align","sortable","cell","Fragment","editRecord","marginRight","deleteRecord","config","page_size","length_menu","filename","no_data_text","button","excel","print","csv","language","filter","info","pagination","first","previous","next","last","show_length_menu","show_filter","show_pagination","show_info","records","currentRecord","getData","bind","_assertThisInitialized","_this2","status","pageData","faPlus","ReactDatatable","onPageChange","pageChange","ToastContainer","addCarousel","carouselData","CarouselAdd","handleImg","file","files","reader","FileReader","onload","imageDataUrl","result","prevState","img","readAsDataURL","onUserCarousel","newCarousel","heroTitle","heroText","devices","freetoplay","playtoearn","Status","options","onClose","document","getElementById","getdata","display","src","CarouselUpdateModal","split","onCarouselUpdate","date","_nextProps$record","startsWithPrefix","startsWith","imgflg","_this3","CarouselAddModal","StaffAdd","onStaff","username","discord","telegram","role","newStaff","StaffUpdateModal","onStaffUpdate","Staff","get","StaffAddModal","AboutAdd","onAbout","newAbout","title","onAboutUpdate","About","AboutAddModal","AboutUpdateModal","jwtToken","currentTime","Date","now","exp","window","location","App","Provider","Router","Switch","exact","path","PrivateRoute","User","Carousel","NotFound","__webpack_require__","r","__webpack_exports__","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","jquery__WEBPACK_IMPORTED_MODULE_4__","jquery__WEBPACK_IMPORTED_MODULE_4___default","jQuery","ReactDOM","click","toggleClass","on","val"],"mappings":"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","file":"static/js/main.f74fae11.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    console.log(userData);\r\n    axios\r\n        .post(\"/api/register\", userData)\r\n        .then(res => history.push(\"/login\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const loginUser = userData => dispatch => {\r\n   \r\n    axios\r\n        .post(\"/api/login\", userData)\r\n        .then(res => {\r\n            \r\n            const { token } = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            setAuthToken(token);\r\n            const decoded = jwt_decode(token);\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const USER_ADD = \"USER_ADD\";\r\nexport const USER_UPDATE = \"USER_UPDATE\";\r\nexport const ADD_CAROUSEL = \"ADD_CAROUSEL\";\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser} from \"../../actions/authActions\";\r\n\r\nclass Navbar extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n        const { user } = this.props.auth;\r\n        return (\r\n            <div className=\"container-fluid p-0\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Marmoset Admin</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"settings\"\r\n                                   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Settings\r\n                                </a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"settings\">\r\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={this.onLogoutClick}>Logout</a>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\" onClick={this.onLogoutClick}>Logout ({user.name}) <FontAwesomeIcon icon={faSignOutAlt} /> </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser} from \"../../actions/authActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n        //const { user } = this.props.auth;\r\n        return (\r\n            <div className=\"border-right h-100\" id=\"sidebar-wrapper\">\r\n                <div className=\"list-group list-group-flush\">\r\n                    <Link to=\"/dashboard\" className=\"list-group-item list-group-item-action\">Dashboard</Link>\r\n                    <Link to=\"/users\" className=\"list-group-item list-group-item-action\">Users</Link>\r\n                    <Link to=\"/carousel\" className=\"list-group-item list-group-item-action\">Carousel</Link>\r\n                    <Link to=\"/staff\" className=\"list-group-item list-group-item-action\">Staff</Link>\r\n                    <Link to=\"/about\" className=\"list-group-item list-group-item-action\">About</Link>\r\n                    {/* <Link to=\"/events\" className=\"list-group-item list-group-item-action\">Events</Link> */}\r\n                    <button className=\"list-group-item list-group-item-action\" onClick={this.onLogoutClick}>Logout <FontAwesomeIcon icon={faSignOutAlt} /></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Sidebar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {faUserAlt} from \"@fortawesome/free-solid-svg-icons/faUserAlt\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n        //const { user } = this.props.auth;\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-2\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <h1 className=\"mt-2 text-primary\">Dashboard</h1>\r\n                            <div className=\"row px-2\">\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-primary text-white shadow-lg\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Users</h5>\r\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\r\n                                                additional content.</p>\r\n                                            <Link to=\"/users\" className=\"btn btn-light\"><FontAwesomeIcon className=\"text-primary\" icon={faUserAlt}/> Go to Users</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-secondary text-white shadow-lg\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Special title treatment</h5>\r\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\r\n                                                additional content.</p>\r\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-info text-white shadow-lg\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Special title treatment</h5>\r\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\r\n                                                additional content.</p>\r\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-3 p-sm-2\">\r\n                                    <div className=\"card bg-dark text-white shadow-lg\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Special title treatment</h5>\r\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\r\n                                                additional content.</p>\r\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-4 mx-auto mt-5 card shadow-lg\">\r\n                        <div className=\"card-body p-1\">\r\n                            <h2 className=\"text-center text-primary mt-3\">Login</h2>\r\n                            <form noValidate onSubmit={this.onSubmit} className=\"white\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.email\r\n                                    })}\r\n                                />\r\n                                <span className=\"text-danger\">{errors.email}</span>\r\n                                <br/>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.password\r\n                                    })}\r\n                                />\r\n                                <span className=\"text-danger\">{errors.password}</span>\r\n                                <p className=\"text-center pb-0 mt-2\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-large btn-primary mt-2 px-5\">\r\n                                        Login\r\n                                    </button>\r\n                                </p>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h1>\r\n                           Not Found\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter  } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n                            home\r\n                        </Link>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Register</b> below\r\n                            </h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Already have an account? <Link to=\"/login\">Log in</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.name}\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    error={errors.name}\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.name\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <span className=\"red-text\">{errors.name}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">{errors.email}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">{errors.password}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password2\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password2\">Confirm Password</label>\r\n                                <span className=\"red-text\">{errors.password2}</span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(Register));","import {\r\n    SET_CURRENT_USER,\r\n    USER_ADD,\r\n    USER_LOADING,\r\n    USER_UPDATE\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false,\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_ADD:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_UPDATE:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload,\r\n            };\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {ADD_CAROUSEL\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    loading: false,\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_CAROUSEL:\r\n            \r\n        console.log(action);\r\n        \r\n        return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport carouselReducer from \"./carouselReducer\";\r\nimport errorReducer from \"./errorReducers\";\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    carousel:carouselReducer,\r\n    errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS,\r\n    USER_ADD,\r\n    USER_UPDATE\r\n} from \"./types\";\r\n\r\nexport const addUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/user-add\", userData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: USER_ADD,\r\n                payload: res,\r\n            })\r\n        ).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};\r\n\r\nexport const updateUser = (userData) => dispatch => {\r\n    axios\r\n        .post(\"/api/user-update\", userData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: USER_UPDATE,\r\n                payload: res,\r\n            })\r\n        ).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass UserAddModal extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onUserAdd = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.addUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"add-user-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add User</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserAdd} id=\"add-user\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"email\">Email</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.email}\r\n                                                error={errors.email}\r\n                                                id=\"email\"\r\n                                                type=\"email\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.email\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.email}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password\">Password</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.password}\r\n                                                error={errors.password}\r\n                                                id=\"password\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.password\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.password}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password2\">Confirm Password</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.password2}\r\n                                                id=\"password2\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.password2\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.password2}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserAddModal.propTypes = {\r\n    addUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addUser }\r\n)(withRouter(UserAddModal));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass UserUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.record.id,\r\n            name: this.props.record.name,\r\n            email: this.props.record.email,\r\n            password: '',\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.record) {\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                name: nextProps.record.name,\r\n                email: nextProps.record.email,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        if (e.target.id === 'user-update-name') {\r\n            this.setState({ name: e.target.value });\r\n        }\r\n        if (e.target.id === 'user-update-email') {\r\n            this.setState({ email: e.target.value });\r\n        }\r\n        if (e.target.id === 'user-update-password') {\r\n            this.setState({ password: e.target.value });\r\n        }\r\n    };\r\n\r\n    onUserUpdate = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            _id: this.state.id,\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.updateUser(newUser);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-user-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update User</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserUpdate} id=\"update-user\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"user-update-id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"user-update-name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"email\">Email</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.email}\r\n                                                error={errors.email}\r\n                                                id=\"user-update-email\"\r\n                                                type=\"email\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.email\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.email}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"password\">Password</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                data-reset-input={true}\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                error={errors.password}\r\n                                                id=\"user-update-password\"\r\n                                                type=\"password\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.password\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.password}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserUpdateModal.propTypes = {\r\n    updateUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(UserUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport UserAddModal from \"../partials/UserAddModal\";\r\nimport UserUpdateModal from \"../partials/UserUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"name\",\r\n                text: \"Name\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"email\",\r\n                text: \"Email\",\r\n                className: \"email\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"date\",\r\n                text: \"Date\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-user-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                password2: '',\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .post(\"/api/user-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/user-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <UserAddModal/>\r\n                    <UserUpdateModal record={this.state.currentRecord}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-user-modal\"><FontAwesomeIcon icon={faPlus}/> Add User</button>\r\n                            <h1 className=\"mt-2 text-primary\">Users List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nUsers.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Users);\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS,\r\n    ADD_CAROUSEL\r\n} from \"./types\";\r\n\r\nexport const addCarousel = (carouselData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/carousel-add\", carouselData)\r\n        .then(res =>{\r\n            \r\n            dispatch({\r\n                type: ADD_CAROUSEL,\r\n                payload: res,\r\n            });\r\n        }\r\n        ).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};\r\n","import React,{useNavigate} from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCarousel } from \"../../actions/carouselActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nclass CarouselAdd extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            heroTitle: \"\",\r\n            heroText: \"\",\r\n            img: \"\",\r\n            devices: \"\",\r\n            freetoplay: \"\",\r\n            playtoearn: \"\",\r\n            Status: \"\"\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    handleImg = e => {\r\n        try{\r\n            var file = e.target.files[0];\r\n            var reader = new FileReader();\r\n            // Set the onload event handler\r\n            reader.onload = (e) => {\r\n              var imageDataUrl = e.target.result;\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                img: imageDataUrl\r\n              }));\r\n          \r\n              // Perform further actions with the image data URL\r\n            };\r\n            // Read the selected file as a data URL\r\n            reader.readAsDataURL(file);\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n \r\n    }\r\n\r\n    onUserCarousel = e => {\r\n        e.preventDefault();\r\n        const newCarousel = {\r\n            heroTitle: this.state.heroTitle,\r\n            heroText: this.state.heroText,\r\n            img: this.state.img,\r\n            devices: this.state.devices,\r\n            freetoplay: this.state.freetoplay,\r\n            playtoearn: this.state.playtoearn,\r\n            Status: this.state.Status\r\n        };\r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('add-carousel-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    heroTitle: \"\",\r\n                    heroText: \"\",\r\n                    img: \"\",\r\n                    devices: \"\",\r\n                    freetoplay: \"\",\r\n                    playtoearn: \"\",\r\n                    Status: \"\"\r\n                });\r\n            }\r\n        };\r\n\r\n        axios\r\n        .post(\"/api/carousel-add\", newCarousel)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        })\r\n        .catch(err =>{});\r\n    };\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"modal fade\" id=\"add-carousel-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Carousel</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onUserCarousel} id=\"add-user\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"heroTitle\">heroTitle</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.heroTitle}\r\n                                                id=\"heroTitle\"\r\n                                                type=\"text\"\r\n                                                // error={errors.name}\r\n                                                className={classnames(\"form-control\")}/>\r\n                                            {/* <span className=\"text-danger\">{errors.name}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"heroText\">heroText</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.heroText}\r\n                                                // error={errors.heroText}\r\n                                                id=\"heroText\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"img\">img</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\" style={{display: \"flex\"}}>\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                            <img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>\r\n                                            {/* {\r\n                                                this.state.img.startsWith(\"data:image\")?<img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>:\r\n                                                <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                // error={errors.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                            }\r\n                                            <input onChange={this.handleImg}\r\n                                                id=\"img-file\" type=\"file\"/> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"devices\">devices</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.devices}\r\n                                                id=\"devices\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"freetoplay\">freetoplay</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.freetoplay}\r\n                                                id=\"freetoplay\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"playtoearn\">playtoearn</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.playtoearn}\r\n                                                id=\"playtoearn\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"Status\">Status</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.Status}\r\n                                                id=\"Status\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add Carousel\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCarouselAdd.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addCarousel }\r\n)(withRouter(CarouselAdd));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass CarouselUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            heroTitle: \"\",\r\n            heroText: \"\",\r\n            img: \"\",\r\n            devices: \"\",\r\n            freetoplay: \"\",\r\n            playtoearn: \"\",\r\n            Status: \"\",\r\n            date: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.record) {\r\n            const myVariable = nextProps?.record?.img || '';\r\n            const startsWithPrefix = myVariable.startsWith('data:image/');\r\n            console.log(startsWithPrefix);\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                heroTitle: nextProps.record.heroTitle,\r\n                heroText: nextProps.record.heroText,\r\n                img: nextProps.record.img,\r\n                imgflg:startsWithPrefix,\r\n                devices: nextProps.record.devices,\r\n                freetoplay: nextProps.record.freetoplay,\r\n                playtoearn: nextProps.record.playtoearn,\r\n                Status: nextProps.record.Status,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id.split(\"-\")[0]]: e.target.value });\r\n    };\r\n    handleImg = e => {\r\n        try{\r\n            var file = e.target.files[0];\r\n            var reader = new FileReader();\r\n            // Set the onload event handler\r\n            reader.onload = (e) => {\r\n              var imageDataUrl = e.target.result;\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                img: imageDataUrl\r\n              }));\r\n          \r\n              // Perform further actions with the image data URL\r\n            };\r\n            // Read the selected file as a data URL\r\n            reader.readAsDataURL(file);\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n \r\n    }\r\n    onCarouselUpdate = e => {\r\n        e.preventDefault();\r\n        const newCarousel = {\r\n            _id: this.state.id,\r\n            heroTitle: this.state.heroTitle,\r\n            heroText: this.state.heroText,\r\n            img: this.state.img,\r\n            devices: this.state.devices,\r\n            freetoplay: this.state.freetoplay,\r\n            playtoearn: this.state.playtoearn,\r\n            Status: this.state.Status\r\n        };\r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('update-carousel-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    heroTitle: \"\",\r\n                    heroText: \"\",\r\n                    img: \"\",\r\n                    devices: \"\",\r\n                    freetoplay: \"\",\r\n                    playtoearn: \"\",\r\n                    Status: \"\"\r\n                });\r\n            }\r\n        };\r\n        axios\r\n        .post(\"/api/carousel-update\", newCarousel)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        }).catch(err =>{\r\n\r\n        });\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-carousel-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Carousel</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onCarouselUpdate} id=\"update-user\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">heroTitle</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.heroTitle}\r\n                                                id=\"heroTitle\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">heroText</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.heroText}\r\n                                                id=\"heroText-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">img</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                            <img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>\r\n                                            {/* {\r\n                                                \r\n                                                this.state.imgflg?<img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>:<input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                id=\"img-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                                \r\n                                            }<input onChange={this.handleImg}\r\n                                            id=\"img-file\" type=\"file\"/> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">devices</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.devices}\r\n                                                id=\"devices-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">freetoplay</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.freetoplay}\r\n                                                id=\"freetoplay-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">playtoearn</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.playtoearn}\r\n                                                id=\"playtoearn-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Status</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.Status}\r\n                                                id=\"Status-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-user\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCarouselUpdateModal.propTypes = {\r\n    updateUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(CarouselUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport CarouselAddModal from \"../partials/CarouselAddModal\";\r\nimport CarouselUpdateModal from \"../partials/CarouselUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"heroTitle\",\r\n                text: \"heroTitle\",\r\n                className: \"heroTitle\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"date\",\r\n                text: \"Date\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-carousel-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                password2: '',\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .post(\"/api/carousel-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data});\r\n            })\r\n            .catch();\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/carousel-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <CarouselAddModal getdata={()=>this.getData()}/>\r\n                    <CarouselUpdateModal record={this.state.currentRecord} getdata={()=>this.getData()}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-carousel-modal\"><FontAwesomeIcon icon={faPlus}/> Add Carousel</button>\r\n                            <h1 className=\"mt-2 text-primary\">Carousel List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nUsers.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Users);\r\n","import React,{useNavigate} from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCarousel } from \"../../actions/carouselActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nclass StaffAdd extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            discord: \"\",\r\n            telegram: \"\",\r\n            role: \"\",\r\n            img: \"\",\r\n            file:\"\"\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onStaff = e => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('add-staff-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    username: \"\",\r\n                    discord: \"\",\r\n                    telegram: \"\",\r\n                    role: \"\",\r\n                    img: \"\"\r\n                });\r\n            }\r\n        };\r\n        const newStaff = {\r\n            username: this.state.username,\r\n            discord: this.state.discord,\r\n            telegram: this.state.telegram,\r\n            role: this.state.role,\r\n            img:this.state.img\r\n        };\r\n        axios\r\n        .post(\"/api/staff-add\", newStaff)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        })\r\n        .catch(err =>{});\r\n    };\r\n    handleImg = e => {\r\n        try{\r\n            var file = e.target.files[0];\r\n\r\n            var reader = new FileReader();\r\n            // Set the onload event handler\r\n            reader.onload = (e) => {\r\n              var imageDataUrl = e.target.result;\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                img: imageDataUrl,\r\n                file:file\r\n              }));\r\n              // Perform further actions with the image data URL\r\n            };\r\n            // Read the selected file as a data URL\r\n            reader.readAsDataURL(file);\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n \r\n    }\r\n    render() {\r\n       \r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"modal fade\" id=\"add-staff-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Staff</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onStaff} id=\"add-staff\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"title\">Username</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.username}\r\n                                                id=\"username\"\r\n                                                type=\"text\"\r\n                                                // error={errors.name}\r\n                                                className={classnames(\"form-control\")}/>\r\n                                            {/* <span className=\"text-danger\">{errors.name}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"text\">Discord</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.discord}\r\n                                                // error={errors.heroText}\r\n                                                id=\"discord\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"text\">Telegram</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.telegram}\r\n                                                // error={errors.heroText}\r\n                                                id=\"telegram\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"text\">Role</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.role}\r\n                                                // error={errors.heroText}\r\n                                                id=\"role\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"img\">img</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\" style={{display: \"flex\"}}>\r\n                                            {\r\n                                                this.state.img.startsWith(\"data:image\")?<img src={this.state.img} style={{height:\"500px\",width:\"500px\"}}/>:\r\n                                                <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                // error={errors.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                            }\r\n                                            <input onChange={this.handleImg}\r\n                                                id=\"img-file\" type=\"file\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-staff\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add Staff\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nStaffAdd.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addCarousel }\r\n)(withRouter(StaffAdd));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass StaffUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            username: \"\",\r\n            telegram: \"\",\r\n            discord: \"\",\r\n            role:\"\",\r\n            img: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps.record);\r\n        if (nextProps.record) {\r\n            const myVariable = nextProps?.record?.img || '';\r\n            const startsWithPrefix = myVariable.startsWith('data:image/');\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                username: nextProps.record.username,\r\n                telegram: nextProps.record.telegram,\r\n                discord: nextProps.record.discord,\r\n                role: nextProps.record.role,\r\n                img: nextProps.record.img,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id.split(\"-\")[0]]: e.target.value });\r\n    };\r\n    handleImg = e => {\r\n        try{\r\n            var file = e.target.files[0];\r\n            var reader = new FileReader();\r\n            // Set the onload event handler\r\n            reader.onload = (e) => {\r\n              var imageDataUrl = e.target.result;\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                img: imageDataUrl\r\n              }));\r\n          \r\n              // Perform further actions with the image data URL\r\n            };\r\n            // Read the selected file as a data URL\r\n            reader.readAsDataURL(file);\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n \r\n    }\r\n    onStaffUpdate = e => {\r\n        e.preventDefault();\r\n        const newStaff = {\r\n            _id: this.state.id,\r\n            username: this.state.username,\r\n            telegram: this.state.telegram,\r\n            discord: this.state.discord,\r\n            role: this.state.role,\r\n            img: this.state.img\r\n        };\r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('update-staff-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    username:\"\",\r\n                    telegram: \"\",\r\n                    discord:\"\", \r\n                    role:\"\", \r\n                    img: \"\"\r\n                });\r\n            }\r\n        };\r\n        axios\r\n        .post(\"/api/staff-update\", newStaff)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        }).catch(err =>{\r\n\r\n        });\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-staff-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Staff</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onStaffUpdate} id=\"update-staff\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.username}\r\n                                                id=\"username\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Telegram</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.telegram}\r\n                                                id=\"telegram\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Discord</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.discord}\r\n                                                id=\"discord\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Role</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.role}\r\n                                                id=\"role\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Image</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.img}\r\n                                                id=\"img\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-staff\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update Staff\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nStaffUpdateModal.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(StaffUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport StaffAddModal from \"../partials/StaffAddModal\";\r\nimport StaffUpdateModal from \"../partials/StaffUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Staff extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"username\",\r\n                text: \"Username\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-staff-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .get(\"/api/staff-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n       \r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/staff-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <StaffAddModal getData={this.getData}/>\r\n                    <StaffUpdateModal getData={this.getData} record={this.state.currentRecord}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-staff-modal\"><FontAwesomeIcon icon={faPlus}/>Staff User</button>\r\n                            <h1 className=\"mt-2 text-primary\">Staff List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nStaff.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Staff);\r\n","import React,{useNavigate} from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCarousel } from \"../../actions/carouselActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nclass AboutAdd extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: \"\",\r\n            text: \"\",\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined) {\r\n            $('#add-user-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onAbout = e => {\r\n        e.preventDefault();\r\n        const newAbout = {\r\n            title: this.state.title,\r\n            text: this.state.text,\r\n        };\r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('add-about-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    title: \"\",\r\n                    text: \"\"\r\n                });\r\n            }\r\n        };\r\n\r\n        axios\r\n        .post(\"/api/about-add\", newAbout)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        })\r\n        .catch(err =>{});\r\n    };\r\n    render() {\r\n       \r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"modal fade\" id=\"add-about-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add About</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onAbout} id=\"add-about\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"heroTitle\">Title</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.title}\r\n                                                id=\"title\"\r\n                                                type=\"text\"\r\n                                                // error={errors.name}\r\n                                                className={classnames(\"form-control\")}/>\r\n                                            {/* <span className=\"text-danger\">{errors.name}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"text\">Text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <textarea\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.text}\r\n                                                // error={errors.heroText}\r\n                                                id=\"text\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-about\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add About\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAboutAdd.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addCarousel }\r\n)(withRouter(AboutAdd));\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass CarouselUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            title: \"\",\r\n            text: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.record) {\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                title: nextProps.record.title,\r\n                text: nextProps.record.text,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        if (nextProps.auth !== undefined\r\n            && nextProps.auth.user !== undefined\r\n            && nextProps.auth.user.data !== undefined\r\n            && nextProps.auth.user.data.message !== undefined\r\n            && nextProps.auth.user.data.success) {\r\n            $('#update-about-modal').modal('hide');\r\n            toast(nextProps.auth.user.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id.split(\"-\")[0]]: e.target.value });\r\n    };\r\n    onAboutUpdate = e => {\r\n        e.preventDefault();\r\n        const newAbout = {\r\n            _id:this.state.id,\r\n            title: this.state.title,\r\n            text: this.state.text,\r\n        };\r\n        const options = {\r\n            onClose: props => { \r\n                var modal = document.getElementById('update-about-modal');\r\n                $(modal).modal('hide');\r\n                this.setState( {\r\n                    title: \"\",\r\n                    text: \"\",\r\n                });\r\n            }\r\n        };\r\n        axios\r\n        .post(\"/api/about-update\", newAbout)\r\n        .then(res =>{\r\n            toast(res.data.message,options);\r\n            this.props.getdata();\r\n        }).catch(err =>{});\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-about-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update About</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onAboutUpdate} id=\"update-about\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Title</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.title}\r\n                                                id=\"title\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <textarea\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.text}\r\n                                                // error={errors.heroText}\r\n                                                id=\"text-update-name\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-about\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update About\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCarouselUpdateModal.propTypes = {\r\n    updateUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateUser }\r\n)(withRouter(CarouselUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport AboutAddModal from \"../partials/AboutAddModal\";\r\nimport AboutUpdateModal from \"../partials/AboutUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {\r\n                key: \"_id\",\r\n                text: \"Id\",\r\n                className: \"id\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"title\",\r\n                text: \"Title\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"date\",\r\n                text: \"Date\",\r\n                className: \"date\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: false,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-about-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 10, 20, 50 ],\r\n            filename: \"Users\",\r\n            no_data_text: 'No user found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            records: []\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n            }\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .get(\"/api/about-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch();\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/about-delete\", {_id: record._id})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <AboutAddModal getdata={this.getData}/>\r\n                    <AboutUpdateModal record={this.state.currentRecord} getdata={this.getData}/>\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-about-modal\"><FontAwesomeIcon icon={faPlus}/>Add About</button>\r\n                            <h1 className=\"mt-2 text-primary\">About List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nAbout.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(About);\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./components/pages/Dashboard\";\r\nimport React, { Component } from 'react';\r\nimport Login from \"./components/auth/Login\";\r\nimport NotFound from \"./components/layout/NotFound\";\r\nimport { Provider } from \"react-redux\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Register from \"./components/auth/Register\";\r\nimport store from \"./store\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap';\r\nimport '../node_modules/font-awesome/css/font-awesome.css';\r\nimport '../node_modules/jquery/dist/jquery.min';\r\nimport '../node_modules/popper.js/dist/popper';\r\n\r\nimport User from \"./components/pages/Users\";\r\nimport Carousel from \"./components/pages/Carousel\";\r\nimport Staff from \"./components/pages/Staff\";\r\nimport About from \"./components/pages/About\";\r\n\r\nif (localStorage.jwtToken) {\r\n    const token = localStorage.jwtToken;\r\n    setAuthToken(token);\r\n    const decoded = jwt_decode(token);\r\n    store.dispatch(setCurrentUser(decoded));\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        store.dispatch(logoutUser());\r\n        window.location.href = \"./login\";\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render () {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <div className=\"App\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Login} />\r\n                            <Route exact path=\"/register\" component={Register} />\r\n                            <Route exact path=\"/login\" component={Login} />\r\n                            <Switch>\r\n                                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                                <PrivateRoute exact path=\"/users\" component={User} />\r\n                                <PrivateRoute exact path=\"/carousel\" component={Carousel} />\r\n                                <PrivateRoute exact path=\"/staff\" component={Staff} />\r\n                                <PrivateRoute exact path=\"/about\" component={About} />\r\n                            </Switch>\r\n                            <Route exact path=\"*\" component={NotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport $ from \"jquery\";\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\nglobal.jQuery = $;\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n$(\"#menu-toggle\").click(function() {\r\n    $(\"#wrapper\").toggleClass(\"toggled\");\r\n});\r\n\r\n$('.modal[data-reset=\"true\"]').on('shown.bs.modal', () =>\r\n    $(\"input[name != 'timestamp']\").val(''));\r\n\r\n$('.modal').on('shown.bs.modal', () =>\r\n    $('input[data-reset-input=\"true\"]').val(''));\r\n"],"sourceRoot":""}